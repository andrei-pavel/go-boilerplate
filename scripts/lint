#!/bin/bash

# Copyright (C) 2017-2018 Andrei Pavel, andrei.pavel@cti.pub.ro
# Licensed under the MIT License

# Header
ARGUMENTS="\
  [-o|--old]                   build the old way with exporting GOPATH
"
SCRIPT_PATH="$(dirname "$(readlink -f "${0}")")"
. "${SCRIPT_PATH}/lib/header"
. "${SCRIPT_PATH}/lib/utils"
. "${SCRIPT_PATH}/lib/spinner"

# Parse arguments.
while (( ${#} > 0 )); do
  case "${1}" in
  # [-o|--old]                   build the old way with exporting GOPATH
  '-o'|'--old') old=true ;;
  *)
    # Unrecognized argument
    printf "${RED}ERROR: Unrecognized argument '%s'${RESET}\\n" "${1}" 1>&2; print-usage; exit 1
  esac; shift
done

# Default arguments
[[ -z "${old+x}" ]] && old=false

# Install gometalinter if not installed.
export PATH="${PATH}:${GOPATH}/bin"
if ! command -v gometalinter 1> /dev/null; then
  go install github.com/alecthomas/gometalinter
  gometalinter --install
fi

# Export Go variables.
if ${old}; then
  . "${SCRIPT_PATH}/go-env"

  # Lint recursively.
  pushd "$(git rev-parse --show-toplevel)" 1> /dev/null
  {
    start-spinner 'Linting...'
    directories=$(find . -mindepth 1 -maxdepth 1 -type d -not -path '.git*' | sort -V)
    files=$(find . -maxdepth 1 -type f -name "*.go")
    recursive_directories=
    for directory in ${directories}; do
      if [[ ${directory} == *"src/github.com"* || \
            ${directory} == *"src/golang.org"* || \
            ${directory} == *"src/gopkg.in"* ]]; then
        continue
      fi
      recursive_directories+="${directory}/... "
    done
    gometalinter ${recursive_directories} ${files} | sort -V
    stop-spinner ${?}
  }
  popd 1> /dev/null
else
  printf 'gometalinter did not support Go modules yet at the time of writing this.

  https://github.com/alecthomas/gometalinter/issues/509

If you do want to run with the old module, run:

  ./scripts/lint -o
' >&2
fi
