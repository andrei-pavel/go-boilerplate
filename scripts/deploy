#!/bin/bash

# Copyright (C) 2017-2018 Andrei Pavel, andrei.pavel@cti.pub.ro
# Licensed under the MIT License

# Header
ARGUMENTS="\
  [\$hosts]                    hosts to deploy to, else deploy locally
"
SCRIPT_PATH="$(dirname "$(readlink -f "${0}")")"
. "${SCRIPT_PATH}/lib/header"
. "${SCRIPT_PATH}/lib/spinner"

# Get toplevel path.
pushd "${SCRIPT_PATH}" 1> /dev/null
{
  toplevel=$(git rev-parse --show-toplevel)
}
popd 1> /dev/null


pushd "${toplevel}" 1> /dev/null
{
  if (( ${#} == 0 )); then
    # Locally
    # Make sure network exists.
    network="$(docker network ls -q --filter 'name=Network-Boilerplate')"
    if [[ -z "${network}" ]]; then
      docker network create 'Network-Boilerplate'
    fi
    docker-compose up -d --build --force-recreate --remove-orphans
  else
    # Remotely
    root_directory="$(basename "${toplevel}")"
    for host in "${@}"; do
      start_spinner "Uploading to ${host}..."
      ssh "${host}" "rm -rf ${root_directory}"
      ./scripts/rsync-synchronize "./" "${host}:${root_directory}/"
      stop_spinner ${?}

      start_spinner "Deploying remotely on ${host}..."
      ssh "${host}" "\
        cd \"${root_directory}\"
        ./scripts/docker-clean -a
        ./scripts/deploy $(additional)
      "
      stop_spinner ${?}
    done
  fi
}
popd 1> /dev/null
